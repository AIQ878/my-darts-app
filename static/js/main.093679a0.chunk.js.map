{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","InputContainer","Input","input","AddButton","button","OptionList","OptionItem","DeleteButton","WheelContainer","Wheel","svg","props","rotation","Segment","path","color","SegmentText","text","fontSize","Pointer","Button","ResetButton","Result","Encouragement","show","colors","encouragements","ClearButton","Notice","p","AppTitle","h1","Darts","options","setOptions","useState","newOption","setNewOption","setRotation","result","setResult","showEncouragement","setShowEncouragement","encouragement","setEncouragement","getSegmentPath","index","total","angle","startAngle","endAngle","start","polarToCartesian","end","largeArcFlag","x","y","centerX","centerY","radius","angleInDegrees","angleInRadians","Math","PI","cos","sin","getFontSize","optionsLength","getTextPath","midAngle","React","createElement","type","value","onChange","e","target","placeholder","maxLength","onClick","addOption","trim","length","slice","disabled","map","option","key","filter","_","i","removeOption","clearOptions","viewBox","cx","cy","r","fill","id","d","lines","splitText","href","startOffset","textAnchor","dy","spinWheel","newRotation","floor","random","setTimeout","selectedIndex","resetWheel","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","App"],"mappings":"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","file":"static/js/main.093679a0.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-family: 'Arial', sans-serif;\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n\nconst InputContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  flex-grow: 1;\n  padding: 10px;\n  font-size: 16px;\n  border: 1px solid #e0e0e0;\n  border-radius: 5px;\n  margin-right: 10px;\n`;\n\nconst AddButton = styled.button`\n  background-color: #4285f4;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  font-size: 16px;\n  border-radius: 5px;\n  cursor: pointer;\n  &:hover {\n    background-color: #3367d6;\n  }\n`;\n\nconst OptionList = styled.div`\n  width: 100%;\n  margin-bottom: 20px;\n`;\n\nconst OptionItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  margin-bottom: 10px;\n  background-color: #f5f5f5;\n  border-radius: 5px;\n`;\n\nconst DeleteButton = styled.button`\n  background-color: transparent;\n  border: none;\n  color: #ff4d4d;\n  font-size: 20px;\n  cursor: pointer;\n`;\n\nconst WheelContainer = styled.div`\n  position: relative;\n  width: 300px;\n  height: 300px;\n  margin-bottom: 20px;\n`;\n\nconst Wheel = styled.svg`\n  width: 100%;\n  height: 100%;\n  transform: ${props => `rotate(${props.rotation}deg)`};\n  transition: transform 5s cubic-bezier(0.25, 0.1, 0.25, 1);\n`;\n\nconst Segment = styled.path`\n  fill: ${props => props.color};\n  stroke: white;\n  stroke-width: 2;\n`;\n\nconst SegmentText = styled.text`\n  font-size: ${props => props.fontSize}px;\n  font-weight: bold;\n  fill: black;\n`;\n\nconst Pointer = styled.div`\n  position: absolute;\n  top: -20px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 0;\n  height: 0;\n  border-left: 10px solid transparent;\n  border-right: 10px solid transparent;\n  border-top: 20px solid black;\n`;\n\nconst Button = styled.button`\n  padding: 10px 20px;\n  font-size: 16px;\n  background-color: #4285f4;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  margin-right: 10px;\n  &:hover {\n    background-color: #3367d6;\n  }\n`;\n\nconst ResetButton = styled(Button)`\n  background-color: white;\n  color: black;\n  border: 1px solid #e0e0e0;\n  &:hover {\n    background-color: #f5f5f5;\n  }\n`;\n\nconst Result = styled.div`\n  margin-top: 20px;\n  font-size: 24px;\n  font-weight: bold;\n  text-align: center;\n`;\n\nconst Encouragement = styled.div`\n  margin-top: 20px;\n  font-size: 18px;\n  font-style: italic;\n  text-align: center;\n  opacity: ${props => props.show ? 1 : 0};\n  transition: opacity 0.5s ease-in-out;\n`;\n\nconst colors = ['#FFB3BA', '#BAFFC9', '#BAE1FF', '#FFFFBA', '#FFD8B3', '#E0BBE4', '#D4F0F0', '#FFC6FF'];\n\nconst encouragements = [\n  \"チャンスは準備している人にだけ訪れる。 - ルイ・パスツール\",\n  \"人生に失敗がないと、人生を失敗する。 - 斎藤茂太\",\n  \"決断瞬間を待っていては、永遠に決断できない。 - 坂本龍馬\",\n  \"迷わず行けよ、行けばわかるさ。 - 坂本龍馬\",\n  \"決断力とは、適切な時期に適切な行動をとる能力である。 - ディスレーリ\",\n  \"決断こそが、すべての行動の基本である。 - ペトロニウス\",\n  \"決断を下すのに完璧な時期というものはない。 - ロイ・ディズニー\",\n  \"決断力は成功への第一歩である。 - パブロ・ピカソ\",\n  \"決断を恐れるな。間違いを恐れよ。 - 松下幸之助\",\n  \"決断は運命の分かれ道である。 - ハーヴェイ・マッケイ\",\n  \"決断は未来への扉を開く鍵である。 - マックス・ルケード\",\n  \"決断人生の岐路に立つ時にこそ重要だ。 - コンフキウス\",\n  \"決断を先延ばにすることは、最悪の決断である。 - ジョン・F・ケネディ\",\n  \"決断は、あなたの人生を変える力を持っている。 - トニー・ロビンス\",\n  \"決断は、未来を創造する行為である。 - ピーター・ドラッカー\",\n  \"決断には勇気が必要だが、その勇気が人生を変える。 - ノーマン・ビンセント・ピール\",\n  \"決断の瞬間こそ、あなたの真価が問われる時だ。 - ジグ・グラー\",\n  \"決断は、可能性の扉を開く。 - オプラ・ウィンフリー\",\n  \"決断は、あなたの運命を左右する。 - アンソニー・ロビンス\",\n  \"決断こそが、成功への近道である。 - ナポレオン・ヒル\"\n];\n\nconst ClearButton = styled(Button)`\n  background-color: #ff4d4d;\n  margin-bottom: 30px; // 30pxに増やしてスペースを確保\n  &:hover {\n    background-color: #ff3333;\n  }\n`;\n\nconst Notice = styled.p`\n  color: #666;\n  font-size: 14px;\n  margin-top: 10px;\n`;\n\nconst AppTitle = styled.h1`\n  font-size: 24px;\n  font-weight: bold;\n  color: #4285f4;\n  text-align: center;\n  margin-bottom: 20px;\n  text-shadow: 2px 2px 4px rgba(0,0,0,0.1);\n`;\n\nconst Darts = () => {\n  const [options, setOptions] = useState([]);\n  const [newOption, setNewOption] = useState('');\n  const [rotation, setRotation] = useState(0);\n  const [result, setResult] = useState('');\n  const [showEncouragement, setShowEncouragement] = useState(false);\n  const [encouragement, setEncouragement] = useState('');\n\n  const addOption = () => {\n    if (newOption.trim() !== '' && options.length < 8) {\n      setOptions([...options, newOption.trim().slice(0, 8)]);\n      setNewOption('');\n    }\n  };\n\n  const removeOption = (index) => {\n    setOptions(options.filter((_, i) => i !== index));\n  };\n\n  const clearOptions = () => {\n    setOptions([]);\n  };\n\n  const spinWheel = () => {\n    setShowEncouragement(false);\n    const newRotation = Math.floor(Math.random() * 360) + 720 + rotation;\n    setRotation(newRotation);\n    setTimeout(() => {\n      const selectedIndex = Math.floor(((360 - (newRotation % 360)) / (360 / options.length)));\n      setResult(options[selectedIndex]);\n      setEncouragement(encouragements[Math.floor(Math.random() * encouragements.length)]);\n      setShowEncouragement(true);\n    }, 5000);\n  };\n\n  const resetWheel = () => {\n    setRotation(rotation + 360); // 1回転させてリセット\n    setResult('');\n    setShowEncouragement(false);\n  };\n\n  const getSegmentPath = (index, total) => {\n    const angle = 360 / total;\n    const startAngle = index * angle;\n    const endAngle = (index + 1) * angle;\n    const start = polarToCartesian(50, 50, 50, startAngle);\n    const end = polarToCartesian(50, 50, 50, endAngle);\n    const largeArcFlag = endAngle - startAngle <= 180 ? \"0\" : \"1\";\n    return `M 50 50 L ${start.x} ${start.y} A 50 50 0 ${largeArcFlag} 1 ${end.x} ${end.y} Z`;\n  };\n\n  const polarToCartesian = (centerX, centerY, radius, angleInDegrees) => {\n    const angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n    return {\n      x: centerX + (radius * Math.cos(angleInRadians)),\n      y: centerY + (radius * Math.sin(angleInRadians))\n    };\n  };\n\n  const wrapText = (text, maxLength) => {\n    if (text.length <= maxLength) return text;\n    return text.slice(0, maxLength) + '...';\n  };\n\n  const getFontSize = (optionsLength) => {\n    if (optionsLength <= 4) return 7;\n    if (optionsLength <= 6) return 6;\n    return 5;\n  };\n\n  const getTextPath = (index, total) => {\n    const angle = 360 / total;\n    const startAngle = index * angle;\n    const endAngle = (index + 1) * angle;\n    const midAngle = (startAngle + endAngle) / 2;\n    const innerRadius = 20;\n    const outerRadius = 45;\n    const x1 = 50 + innerRadius * Math.cos((midAngle - 90) * Math.PI / 180);\n    const y1 = 50 + innerRadius * Math.sin((midAngle - 90) * Math.PI / 180);\n    const x2 = 50 + outerRadius * Math.cos((midAngle - 90) * Math.PI / 180);\n    const y2 = 50 + outerRadius * Math.sin((midAngle - 90) * Math.PI / 180);\n    return `M${x1},${y1} L${x2},${y2}`;\n  };\n\n  const splitText = (text) => {\n    if (text.length <= 3) return [text];\n    if (text.length <= 6) return [text.slice(0, 3), text.slice(3)];\n    return [text.slice(0, 3), text.slice(3, 6), text.slice(6)];\n  };\n\n  return (\n    <Container>\n      <AppTitle>まよったときのアレ</AppTitle>\n      <InputContainer>\n        <Input\n          type=\"text\"\n          value={newOption}\n          onChange={(e) => setNewOption(e.target.value)}\n          placeholder=\"新しい選択肢を入力\"\n          maxLength={8}\n        />\n        <AddButton onClick={addOption} disabled={options.length >= 8}>追加</AddButton>\n      </InputContainer>\n      <Notice>※選択は8文字までです</Notice>\n      <OptionList>\n        {options.map((option, index) => (\n          <OptionItem key={index}>\n            {option}\n            <DeleteButton onClick={() => removeOption(index)}>🗑️</DeleteButton>\n          </OptionItem>\n        ))}\n      </OptionList>\n      <ClearButton onClick={clearOptions}>全ての選択肢をクリア</ClearButton>\n      <WheelContainer>\n        <Wheel rotation={rotation} viewBox=\"0 0 100 100\">\n          <circle cx=\"50\" cy=\"50\" r=\"50\" fill=\"white\" />\n          <defs>\n            {options.map((_, index) => (\n              <path\n                key={`path-${index}`}\n                id={`textPath-${index}`}\n                d={getTextPath(index, options.length)}\n              />\n            ))}\n          </defs>\n          {options.map((option, index) => {\n            const lines = splitText(option);\n            return (\n              <g key={index}>\n                <Segment \n                  d={getSegmentPath(index, options.length)} \n                  color={colors[index % colors.length]}\n                />\n                <SegmentText fontSize={getFontSize(options.length)}>\n                  <textPath\n                    href={`#textPath-${index}`}\n                    startOffset=\"50%\"\n                    textAnchor=\"middle\"\n                  >\n                    {lines[0]}\n                    {lines[1] && <tspan x=\"0\" dy=\"1.2em\">{lines[1]}</tspan>}\n                    {lines[2] && <tspan x=\"0\" dy=\"1.2em\">{lines[2]}</tspan>}\n                  </textPath>\n                </SegmentText>\n              </g>\n            );\n          })}\n        </Wheel>\n        <Pointer />\n      </WheelContainer>\n      <div>\n        <Button onClick={spinWheel}>運命を回す</Button>\n        <ResetButton onClick={resetWheel}>↺ リセット</ResetButton>\n      </div>\n      <Result>{result && `結果: ${result}`}</Result>\n      <Encouragement show={showEncouragement}>{encouragement}</Encouragement>\n    </Container>\n  );\n};\n\nexport default Darts;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}